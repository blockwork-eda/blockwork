[build-system]
requires = ["poetry"]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "blockwork"
version = "1.0"
description = "An opionated EDA flow"
authors = []
license = "Apache-2.0"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
docker = "6.1.2"
click = "8.1.7"
pyyaml = "6.0.1"
typeguard = "4.2.1"
rich = "13.7.1"
poethepoet = "0.20.0"
ordered-set = "4.1.0"
filelock = "3.14.0"
pytz = "2024.1"
requests = "2.31.0"
gator-eda = { git = "https://github.com/Intuity/gator.git", rev = "9b6c47b6a70f65a4da55e0b17470da3279b563be" }
boto3 = "1.34.103"

[tool.poetry.group.dev.dependencies]
pytest = "7.3.1"
pytest-cov = "4.1.0"
pytest-mock = "3.14.0"
ruff = "0.2.2"
mkdocs = "1.5.3"
mkdocs-material = "9.5.17"
mkdocstrings = { extras = ["python"], version = "0.21.2" }
pre-commit = "3.7.0"

[tool.poetry.scripts]
bw = "blockwork:__main__.main"
blockwork = "blockwork:__main__.main"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--no-cov-on-fail --cov=blockwork --cov-branch --cov-report html --cov-report term -x"
testpaths = ["tests"]

[tool.poe.tasks.test]
shell = "poetry run pytest"

[tool.poe.tasks.lint]
shell = "poetry run ruff check blockwork"

[tool.poe.tasks.fmt]
shell = "poetry run ruff format blockwork && poetry run ruff check --fix blockwork"

[tool.poe.tasks.docs]
shell = "poetry run mkdocs build"

[tool.poe.tasks.docs_serve]
shell = "poetry run mkdocs serve"

[tool.ruff]
line-length = 100
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "B", "UP", "N", "W", "I", "A", "C4", "PTH", "RUF"]
ignore = []
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"
