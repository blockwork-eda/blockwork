name: CI

on:
  pull_request:
  push:
    branches: [ "main" ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment to GitHub pages, but don't cancel running
# builds and wait for completion
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/composites/setup
      with:
        python-version: 3.11
    - name: Run Ruff formatting check
      run: poetry run ruff format --check .
    - name: Run Ruff linting check
      run: poetry run ruff check .
    - name: Run precommit checks
      run: poetry run pre-commit run --all-files

  build_docs:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/composites/setup
      with:
        python-version: 3.11
    - name: Build documentation
      run: |
        poe docs
    - name: Upload documentation artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: ./site

  deploy_docs:
    runs-on: ubuntu-latest
    if: ${{ ! github.event.issue.pull_request }}
    timeout-minutes: 15
    needs: build_docs
    steps:
      - name: Deploy to GitHub pages
        id: deployment
        uses: actions/deploy-pages@v2

  unit_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # TODO: Run against other versions "3.8", "3.9", "3.10"
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/composites/setup
      with:
        python-version: ${{ matrix.python-version }}
    - name: Run tests
      timeout-minutes: 5
      run: poe test
    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: pytest-cov
        path: htmlcov
